/*
 * Ms Route API
 * Ms Route API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ticketsystem.msroutedev.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RouteDTO
 */
@JsonPropertyOrder({
  RouteDTO.JSON_PROPERTY_ID,
  RouteDTO.JSON_PROPERTY_ROUTE_NAME,
  RouteDTO.JSON_PROPERTY_ORIGIN,
  RouteDTO.JSON_PROPERTY_DESTINATION,
  RouteDTO.JSON_PROPERTY_DISTANCE,
  RouteDTO.JSON_PROPERTY_ESTIMATED_DURATION,
  RouteDTO.JSON_PROPERTY_TRANSPORT_TYPE,
  RouteDTO.JSON_PROPERTY_IS_ACTIVE,
  RouteDTO.JSON_PROPERTY_CREATED_AT,
  RouteDTO.JSON_PROPERTY_UPDATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class RouteDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_ROUTE_NAME = "routeName";
  @jakarta.annotation.Nonnull
  private String routeName;

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  @jakarta.annotation.Nonnull
  private String origin;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  @jakarta.annotation.Nonnull
  private String destination;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  @jakarta.annotation.Nonnull
  private Double distance;

  public static final String JSON_PROPERTY_ESTIMATED_DURATION = "estimatedDuration";
  @jakarta.annotation.Nonnull
  private Integer estimatedDuration;

  /**
   * Gets or Sets transportType
   */
  public enum TransportTypeEnum {
    TRAIN(String.valueOf("TRAIN")),
    
    BUS(String.valueOf("BUS"));

    private String value;

    TransportTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransportTypeEnum fromValue(String value) {
      for (TransportTypeEnum b : TransportTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSPORT_TYPE = "transportType";
  @jakarta.annotation.Nonnull
  private TransportTypeEnum transportType;

  public static final String JSON_PROPERTY_IS_ACTIVE = "isActive";
  @jakarta.annotation.Nonnull
  private Boolean isActive;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public RouteDTO() {
  }

  public RouteDTO id(@jakarta.annotation.Nonnull UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public RouteDTO routeName(@jakarta.annotation.Nonnull String routeName) {
    
    this.routeName = routeName;
    return this;
  }

  /**
   * Get routeName
   * @return routeName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRouteName() {
    return routeName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRouteName(@jakarta.annotation.Nonnull String routeName) {
    this.routeName = routeName;
  }


  public RouteDTO origin(@jakarta.annotation.Nonnull String origin) {
    
    this.origin = origin;
    return this;
  }

  /**
   * Get origin
   * @return origin
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrigin(@jakarta.annotation.Nonnull String origin) {
    this.origin = origin;
  }


  public RouteDTO destination(@jakarta.annotation.Nonnull String destination) {
    
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(@jakarta.annotation.Nonnull String destination) {
    this.destination = destination;
  }


  public RouteDTO distance(@jakarta.annotation.Nonnull Double distance) {
    
    this.distance = distance;
    return this;
  }

  /**
   * Get distance
   * @return distance
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getDistance() {
    return distance;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDistance(@jakarta.annotation.Nonnull Double distance) {
    this.distance = distance;
  }


  public RouteDTO estimatedDuration(@jakarta.annotation.Nonnull Integer estimatedDuration) {
    
    this.estimatedDuration = estimatedDuration;
    return this;
  }

  /**
   * Get estimatedDuration
   * @return estimatedDuration
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ESTIMATED_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getEstimatedDuration() {
    return estimatedDuration;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEstimatedDuration(@jakarta.annotation.Nonnull Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
  }


  public RouteDTO transportType(@jakarta.annotation.Nonnull TransportTypeEnum transportType) {
    
    this.transportType = transportType;
    return this;
  }

  /**
   * Get transportType
   * @return transportType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TransportTypeEnum getTransportType() {
    return transportType;
  }


  @JsonProperty(JSON_PROPERTY_TRANSPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransportType(@jakarta.annotation.Nonnull TransportTypeEnum transportType) {
    this.transportType = transportType;
  }


  public RouteDTO isActive(@jakarta.annotation.Nonnull Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsActive() {
    return isActive;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsActive(@jakarta.annotation.Nonnull Boolean isActive) {
    this.isActive = isActive;
  }


  public RouteDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public RouteDTO updatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteDTO routeDTO = (RouteDTO) o;
    return Objects.equals(this.id, routeDTO.id) &&
        Objects.equals(this.routeName, routeDTO.routeName) &&
        Objects.equals(this.origin, routeDTO.origin) &&
        Objects.equals(this.destination, routeDTO.destination) &&
        Objects.equals(this.distance, routeDTO.distance) &&
        Objects.equals(this.estimatedDuration, routeDTO.estimatedDuration) &&
        Objects.equals(this.transportType, routeDTO.transportType) &&
        Objects.equals(this.isActive, routeDTO.isActive) &&
        Objects.equals(this.createdAt, routeDTO.createdAt) &&
        Objects.equals(this.updatedAt, routeDTO.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, routeName, origin, destination, distance, estimatedDuration, transportType, isActive, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    routeName: ").append(toIndentedString(routeName)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    estimatedDuration: ").append(toIndentedString(estimatedDuration)).append("\n");
    sb.append("    transportType: ").append(toIndentedString(transportType)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

