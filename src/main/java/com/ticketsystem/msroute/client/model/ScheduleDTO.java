/*
 * Ms Route API
 * Ms Route API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ticketsystem.msroute.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ticketsystem.msroute.client.model.RouteDTO;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScheduleDTO
 */
@JsonPropertyOrder({
  ScheduleDTO.JSON_PROPERTY_ID,
  ScheduleDTO.JSON_PROPERTY_DEPARTURE_TIME,
  ScheduleDTO.JSON_PROPERTY_ARRIVAL_TIME,
  ScheduleDTO.JSON_PROPERTY_TOTAL_SEATS,
  ScheduleDTO.JSON_PROPERTY_AVAILABLE_SEATS,
  ScheduleDTO.JSON_PROPERTY_BASE_PRICE,
  ScheduleDTO.JSON_PROPERTY_IS_ACTIVE,
  ScheduleDTO.JSON_PROPERTY_CREATED_AT,
  ScheduleDTO.JSON_PROPERTY_UPDATED_AT,
  ScheduleDTO.JSON_PROPERTY_ROUTE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class ScheduleDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_DEPARTURE_TIME = "departureTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime departureTime;

  public static final String JSON_PROPERTY_ARRIVAL_TIME = "arrivalTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime arrivalTime;

  public static final String JSON_PROPERTY_TOTAL_SEATS = "totalSeats";
  @jakarta.annotation.Nonnull
  private Integer totalSeats;

  public static final String JSON_PROPERTY_AVAILABLE_SEATS = "availableSeats";
  @jakarta.annotation.Nonnull
  private Integer availableSeats;

  public static final String JSON_PROPERTY_BASE_PRICE = "basePrice";
  @jakarta.annotation.Nonnull
  private BigDecimal basePrice;

  public static final String JSON_PROPERTY_IS_ACTIVE = "isActive";
  @jakarta.annotation.Nonnull
  private Boolean isActive;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_ROUTE = "route";
  @jakarta.annotation.Nonnull
  private RouteDTO route;

  public ScheduleDTO() {
  }

  public ScheduleDTO id(@jakarta.annotation.Nonnull UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public ScheduleDTO departureTime(@jakarta.annotation.Nonnull OffsetDateTime departureTime) {
    
    this.departureTime = departureTime;
    return this;
  }

  /**
   * Get departureTime
   * @return departureTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEPARTURE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDepartureTime() {
    return departureTime;
  }


  @JsonProperty(JSON_PROPERTY_DEPARTURE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDepartureTime(@jakarta.annotation.Nonnull OffsetDateTime departureTime) {
    this.departureTime = departureTime;
  }


  public ScheduleDTO arrivalTime(@jakarta.annotation.Nonnull OffsetDateTime arrivalTime) {
    
    this.arrivalTime = arrivalTime;
    return this;
  }

  /**
   * Get arrivalTime
   * @return arrivalTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ARRIVAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getArrivalTime() {
    return arrivalTime;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArrivalTime(@jakarta.annotation.Nonnull OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
  }


  public ScheduleDTO totalSeats(@jakarta.annotation.Nonnull Integer totalSeats) {
    
    this.totalSeats = totalSeats;
    return this;
  }

  /**
   * Get totalSeats
   * @return totalSeats
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_SEATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTotalSeats() {
    return totalSeats;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SEATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalSeats(@jakarta.annotation.Nonnull Integer totalSeats) {
    this.totalSeats = totalSeats;
  }


  public ScheduleDTO availableSeats(@jakarta.annotation.Nonnull Integer availableSeats) {
    
    this.availableSeats = availableSeats;
    return this;
  }

  /**
   * Get availableSeats
   * @return availableSeats
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AVAILABLE_SEATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAvailableSeats() {
    return availableSeats;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_SEATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailableSeats(@jakarta.annotation.Nonnull Integer availableSeats) {
    this.availableSeats = availableSeats;
  }


  public ScheduleDTO basePrice(@jakarta.annotation.Nonnull BigDecimal basePrice) {
    
    this.basePrice = basePrice;
    return this;
  }

  /**
   * Get basePrice
   * @return basePrice
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBasePrice() {
    return basePrice;
  }


  @JsonProperty(JSON_PROPERTY_BASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBasePrice(@jakarta.annotation.Nonnull BigDecimal basePrice) {
    this.basePrice = basePrice;
  }


  public ScheduleDTO isActive(@jakarta.annotation.Nonnull Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsActive() {
    return isActive;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsActive(@jakarta.annotation.Nonnull Boolean isActive) {
    this.isActive = isActive;
  }


  public ScheduleDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ScheduleDTO updatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ScheduleDTO route(@jakarta.annotation.Nonnull RouteDTO route) {
    
    this.route = route;
    return this;
  }

  /**
   * Get route
   * @return route
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteDTO getRoute() {
    return route;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoute(@jakarta.annotation.Nonnull RouteDTO route) {
    this.route = route;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleDTO scheduleDTO = (ScheduleDTO) o;
    return Objects.equals(this.id, scheduleDTO.id) &&
        Objects.equals(this.departureTime, scheduleDTO.departureTime) &&
        Objects.equals(this.arrivalTime, scheduleDTO.arrivalTime) &&
        Objects.equals(this.totalSeats, scheduleDTO.totalSeats) &&
        Objects.equals(this.availableSeats, scheduleDTO.availableSeats) &&
        Objects.equals(this.basePrice, scheduleDTO.basePrice) &&
        Objects.equals(this.isActive, scheduleDTO.isActive) &&
        Objects.equals(this.createdAt, scheduleDTO.createdAt) &&
        Objects.equals(this.updatedAt, scheduleDTO.updatedAt) &&
        Objects.equals(this.route, scheduleDTO.route);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, departureTime, arrivalTime, totalSeats, availableSeats, basePrice, isActive, createdAt, updatedAt, route);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    departureTime: ").append(toIndentedString(departureTime)).append("\n");
    sb.append("    arrivalTime: ").append(toIndentedString(arrivalTime)).append("\n");
    sb.append("    totalSeats: ").append(toIndentedString(totalSeats)).append("\n");
    sb.append("    availableSeats: ").append(toIndentedString(availableSeats)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

